{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInput","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGif","category","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","elem","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YAAe,EAEVC,mBAAS,IAFC,mBAElCC,EAFkC,KAEtBC,EAFsB,KAexC,OACI,sBAAMC,SATK,SAACC,GACZA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAa,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACpCN,EAAS,MAKb,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAd1B,SAACP,GACjBF,EAASE,EAAEQ,OAAOF,a,+BCPbG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAClBC,QAAQC,IAAIH,GACNI,EAFY,iDAEqCC,UAAUL,GAF/C,+DAGCM,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,EAAaC,UAAUZ,QAVlB,kBAcXM,GAdW,4CAAH,sDCENO,EAAc,SAAC,GAAgB,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAIhC,OAFAF,QAAQC,IAAI,CAACW,QAAOV,QAGhB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAAY,ECFT,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACP1B,EAAQC,GACH0B,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDbwBK,CAAa5B,GAAhCe,EAFqB,EAE1BN,KAAaa,EAFa,EAEbA,QAEpB,OACI,qCACI,6BAAKtB,IACHsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAkB,GACR,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEhBhCiB,EAAe,WAAK,IAAD,EAGM5C,mBAAS,CAAC,cAHhB,mBAGrB6C,EAHqB,KAGT9C,EAHS,KAS5B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAEA,6BACM8C,EAAWpB,KAAK,SAAAX,GAAQ,OAEtB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,YClB7BgC,IAASC,OAAO,cAAC,EAAD,IAA+BC,SAASC,eAAe,W","file":"static/js/main.d4f7be4a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory})=>{\r\n\r\n    const[inputValue, setInput] = useState(\"\");\r\n    const changeValue = (e)=>{\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const submit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 1){\r\n            setCategory( cat => [inputValue, ...cat]);\r\n            setInput(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <input type=\"text\" value={inputValue} onChange={changeValue} />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n};","export const getGif = async(category)=>{\r\n    console.log(category);\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=LK48xrgUrOdbuqk6nAaz95PXjU2tDWzU`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( elem =>{\r\n        return {\r\n            id: elem.id,\r\n            title: elem.title,\r\n            url: elem.images?.downsized.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url})=>{\r\n\r\n    console.log({title, url});\r\n\r\n    return(\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import React,{ useState, useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category})=>{\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>loading</p> }\r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                        images.map( img =>{\r\n                            return (\r\n                                <GifGridItem \r\n                                    key={img.id}\r\n                                    {...img}/>\r\n                            )\r\n                        } )\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n\r\n};","import { useEffect, useState } from \"react\";\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        getGif( category )\r\n            .then( imgs =>{\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            } )\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React,{ useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    \r\n    const [categories, setCategory] = useState([\"One Punch\"]);\r\n    // const agregar = ()=>{\r\n    //     setState([\"Hunter X\", ...categories]); // Ej. 1\r\n    //     setCategory(cate => [...cate, \"Hunter\"]); // Ej 2\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategory={setCategory}></AddCategory>\r\n            <hr/>\r\n            {/* <button onClick={agregar}>Agregar</button> */}\r\n            <ol>\r\n                { categories.map( category => (\r\n                    // return <li key={category}>{category}</li>\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                        />\r\n                )) }\r\n            </ol>\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp></GifExpertApp>, document.getElementById('root'));"],"sourceRoot":""}